#!/bin/zsh

# Config for zsh interactive shells

# ensure that all commands run here are the intended ones
\unalias -a
unset -f command 2>> /dev/null

setopt autocd								# change directory just by typing its name
setopt interactivecomments	# allow comments in interactive mode
setopt magicequalsubst			# enable filename expansion for arguments of the form ‘anything=expression’
setopt notify								# report the status of background jobs immediately
setopt numericglobsort			# sort filenames numerically when it makes sense

# History configurations
setopt hist_expire_dups_first			# delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups					# ignore duplicated commands history list
setopt hist_ignore_space				# ignore commands that start with space
setopt hist_verify						# show command with history expansion to user before running it
setopt share_history					# share command history data

WORDCHARS=${WORDCHARS//\/} # Don't consider certain characters part of the word

# hide EOL sign ('%')
PROMPT_EOL_MARK=""

# enable completion features
autoload -Uz compinit
compinit -d ~/.cache/zcompdump
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' rehash true
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# configure `time` format
TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S\ncpu\t%P'

# configure a colored prompt
setopt promptsubst	# command substitution in the prompt
configure_prompt() {
	PROMPT=$'%B%F{%(#.white.white)}┌──(%F{%(#.red.red)}%n@%m%F{%(#.white.white)})%b-%B[%F{reset}%(6~.%-1~/…/%4~.%5~)%F{%(#.white.white)}]\n└──%(#.%F{red}( # %).%F{white}(%F{red} $ %F{white}%))%b%F{reset} '

	RPROMPT=$'%(?.. %? %F{red}%Bx%b%F{reset})%(1j. %j %F{yellow}%B⚙%b%F{reset}.)'
}

# use the colored prompt
color_prompt=yes

if [ "$color_prompt" = yes ]; then
	configure_prompt
else
	PROMPT='${debian_chroot:+($debian_chroot)}%n@%m:%~%# '
fi
unset color_prompt

# Print a new line before the prompt, but only if it is not the first line
precmd() {
	if [ -z "$NEW_LINE_BEFORE_PROMPT" ]; then
		NEW_LINE_BEFORE_PROMPT=1
	else
		print ""
	fi
}

# Take advantage of colors ($LS_COLORS for completion as well)
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	export LESS_TERMCAP_mb=$'\E[1;31m'	 # begin blink
	export LESS_TERMCAP_md=$'\E[1;36m'	 # begin bold
	export LESS_TERMCAP_me=$'\E[0m'			 # reset bold/blink
	export LESS_TERMCAP_so=$'\E[01;33m'	 # begin reverse video
	export LESS_TERMCAP_se=$'\E[0m'			 # reset reverse video
	export LESS_TERMCAP_us=$'\E[1;32m'	 # begin underline
	export LESS_TERMCAP_ue=$'\E[0m'			 # reset underline

	zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
	zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
fi

# If bat is installed, use it to display man pages
if [ -x /usr/bin/bat ]; then
	export MANPAGER="sh -c 'col -bx | bat -l man -p'"
	export MANROFFOPT="-c"
fi

# Tab width
tabs -2

# Set vi mode
bindkey -v	#vi key bindings

# Change cursor shape for different vi modes.
function zle-keymap-select () {
	case $KEYMAP in
		vicmd) echo -ne '\e[1 q';;      # block
		viins|main) echo -ne '\e[5 q';; # beam
	esac
}

zle -N zle-keymap-select

echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# Shell builitin commands help
autoload run-help
HELPDIR=/usr/share/zsh/"${ZSH_VERSION}"/help
alias help=run-help

# Use lf to switch directories
lfcd () {
	\umask 077
	tmp="$(command mktemp)"
	command lf -last-dir-path="$tmp" "$@"
	if [ -f "$tmp" ]; then
		dir="$(command cat "$tmp")"
		command rm -f "$tmp"
	else
		\return 1
	fi
	if [ -d "$dir" ] && [ "$dir" != "$(pwd)" ]; then
		\cd "$dir" || \return 1
	fi
}

# Bind lfcd to ctrl-/ (terminals may not distinguish between ctrl-/ and ctrl-_)
bindkey -s '^_' 'lfcd\n'

# (Additional) keybindings
if [ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/zsh/keybindrc ]; then
	source "${XDG_CONFIG_HOME:-$HOME/.config}"/zsh/keybindrc
fi

# load aliases if existent
if [ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/shell/aliasrc ]; then
	source "${XDG_CONFIG_HOME:-$HOME/.config}"/shell/aliasrc
fi

# Plugins:
if [ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/zsh/pluginrc ]; then
	source "${XDG_CONFIG_HOME:-$HOME/.config}"/zsh/pluginrc
fi
